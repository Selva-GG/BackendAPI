{
  "openapi": "3.0.3",
  "info": {
    "title": "Users API",
    "description": "This is docs for the devices and management api",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Users documentation"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "Login user",
        "description": "Authenticates a user",
        "tags": ["Users"],
        "requestBody": {
          "$ref": "#/components/requestBodies/Login"
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "$ref": "#/components/responses/LoginSuccess"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Register user",
        "description": "Creates a new user",
        "tags": ["Users"],
        "requestBody": {
          "$ref": "#/components/requestBodies/Register"
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "$ref": "#/components/responses/RegisterSuccess"
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "User already exists"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": ["Users"],
        "summary": "Logout the user session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "successful Logout"
          }
        }
      }
    },
    "/delete": {
      "post": {
        "tags": ["Users"],
        "summary": "Logout the user session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "integer"
                  }
                }
              },
              "example": {
                "user_id": 241
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful Logout"
          }
        }
      }
    },
    "/refresh": {
      "patch": {
        "tags": ["Users"],
        "summary": "Creates new access token after expiration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "refresh_token": "Random_UUID"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created new access token"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "requestBodies": {
      "Register": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RegisterRequest"
            },
            "examples": {
              "RegisterCorrect": {
                "$ref": "#/components/examples/RegisterCorrect"
              },
              "RegisterIncorrect": {
                "$ref": "#/components/examples/RegisterIncorrect"
              }
            }
          }
        }
      },
      "Login": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LoginRequest"
            },
            "examples": {
              "LoginCorrect": {
                "$ref": "#/components/examples/LoginCorrect"
              },
              "LoginIncorrect": {
                "$ref": "#/components/examples/LoginIncorrect"
              }
            }
          }
        }
      }
    },
    "responses": {
      "RegisterSuccess": {
        "description": "User registered successfully",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RegisterResponse"
            }
          }
        }
      },
      "LoginSuccess": {
        "description": "User logged in successfully",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LoginResponse"
            }
          }
        }
      }
    },
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "format": "email",
            "pattern": "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "maxLength": 128
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "mobile": {
            "type": "integer"
          },
          "address": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "password",
          "firstname",
          "lastname",
          "mobile",
          "address"
        ]
      },
      "RegisterResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "enum": ["User registered successfully"]
          },
          "user": {
            "type": "object"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "enum": ["User logged in successfully"]
          },
          "token": {
            "type": "string"
          },
          "user": {
            "type": "object"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "format": "email",
            "pattern": "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "maxLength": 128
          }
        },
        "required": ["username", "password"]
      }
    },
    "examples": {
      "RegisterCorrect": {
        "value": {
          "username": "selva@gmail.com",
          "password": "12345678",
          "firstname": "Selva",
          "lastname": "Kumar",
          "mobile": 9876543210,
          "address": "123 Main St"
        }
      },
      "RegisterIncorrect": {
        "value": {
          "username": "selva@gmail.com",
          "password": "12345678",
          "firstname": "Selva",
          "lastname": "Kumar",
          "mobile": 9876543210,
          "address": "123 Main St"
        }
      },
      "LoginCorrect": {
        "value": {
          "username": "naveen@gmail.com",
          "password": "12345678"
        }
      },
      "LoginIncorrect": {
        "value": {
          "username": "naveen@gmail.com",
          "password": "123"
        }
      }
    }
  }
}
